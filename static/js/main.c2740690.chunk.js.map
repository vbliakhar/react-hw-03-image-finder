{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/Button/Button.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Searchbar","state","myImage","handleNameChange","e","setState","currentTarget","value","toLowerCase","handlerSubmit","event","preventDefault","trim","props","onSubmit","className","this","type","name","placeholder","onChange","Component","Button","onClick","ImageGalleryItem","image","largeImg","src","webformatURL","alt","ImageGallery","images","map","largeImageURL","id","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBlackDropClick","target","window","addEventListener","removeEventListener","createPortal","children","myKey","App","loading","error","page","handleFormSubmit","alert","fetchImages","fetch","then","res","ok","json","data","hits","Promise","reject","Error","length","catch","finally","myScroll","setLargeImage","url","scrollTo","top","documentElement","scrollHeight","behavior","prevProps","prevState","style","color","textAlign","message","height","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c2740690.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nclass Searchbar extends Component {\n  state = {\n    myImage: \"\",\n  };\n  handleNameChange = (e) => {\n    this.setState({ myImage: e.currentTarget.value.toLowerCase() });\n  };\n  handlerSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.myImage.trim() === \"\") {\n      return;\n    }\n    this.props.onSubmit(this.state.myImage);\n    this.setState({ myImage: \"\" });\n  };\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form onSubmit={this.handlerSubmit} className=\"SearchForm\">\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            name=\"bar\"\n            // autocomplete=\"off\"\n            // autofocus\n            placeholder=\"Search images and photos\"\n            value={this.state.myImage}\n            onChange={this.handleNameChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default Searchbar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst Button = (props) => {\n  return (\n    <>\n      <button type=\"button\" className=\"Button\" onClick={props.onClick}>\n        Load more\n      </button>\n    </>\n  );\n};\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst ImageGalleryItem = ({ image, largeImg }) => {\n  return (\n    <>\n      <li className=\"ImageGalleryItem\">\n        <img\n          src={image.webformatURL}\n          alt=\"\"\n          className=\"ImageGalleryItem-image\"\n          onClick={largeImg}\n        />\n      </li>\n    </>\n  );\n};\nImageGalleryItem.propTypes = {\n  largeImg: PropTypes.func.isRequired,\n  // webformatURL: PropTypes.string.isRequired,\n};\nexport default ImageGalleryItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nfunction ImageGallery({ largeImg, images }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map((image) => {\n        return (\n          <ImageGalleryItem\n            image={image}\n            key={image.id}\n            largeImg={() => largeImg(image.largeImageURL)}\n          />\n        );\n      })}\n    </ul>\n  );\n}\nImageGallery.propTypes = {\n  largeImg: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      // key: PropTypes.number.isRequired,\n      // largeImg: PropTypes.string.isRequired,\n      // image: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ImageGallery;\n","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { createPortal } from \"react-dom\";\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nclass Modal extends Component {\n  state = {};\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n  handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClose();\n    }\n  };\n  handleBlackDropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      this.props.onClose();\n    }\n  };\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBlackDropClick}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>,\n      modalRoot\n    );\n  }\n}\nModal.propTypes = {\n  // onClick: PropTypes.func.isRequired,\n};\nexport default Modal;\n","import React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"./App.scss\";\n\nimport Searchbar from \"./components/Searchbar\";\nimport Button from \"./components/Button\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Modal from \"./components/Modal\";\n\nconst myKey = \"22042086-a7502aa63bbf9b5978b2310\";\nclass App extends Component {\n  state = {\n    myImage: \"\",\n    images: [],\n    loading: false,\n    error: null,\n    page: 1,\n    largeImg: null,\n  };\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevState.myImage;\n    const nextName = this.state.myImage;\n    if (prevName !== nextName) {\n      this.setState({ loading: true });\n      this.fetchImages();\n    }\n  }\n  handleFormSubmit = (myImage) => {\n    if (myImage !== this.state.myImage) {\n      this.setState({ myImage: myImage, images: [], page: 1 });\n    } else {\n      alert(\"This text has already been found\");\n    }\n  };\n  fetchImages = () => {\n    fetch(\n      `https://pixabay.com/api/?q=${this.state.myImage}&page=${this.state.page}&key=${myKey}de&image_type=photo&orientation=horizontal&per_page=12`\n    )\n      .then((res) => {\n        if (res.ok) {\n          return res.json().then((data) => data.hits);\n        }\n        return Promise.reject(new Error(` No image:  ${this.state.myImage}`));\n      })\n      .then((images) => {\n        this.setState((state) => ({\n          images: [...state.images, ...images],\n          page: state.page + 1,\n        }));\n        if (!images.length) {\n          return Promise.reject(new Error(` No image:  ${this.state.myImage}`));\n        } else {\n          this.setState({ error: null });\n        }\n      })\n      .catch((error) => this.setState({ error }))\n      .finally(() => {\n        this.setState({ loading: false });\n        this.myScroll();\n      });\n  };\n\n  setLargeImage = (url) => {\n    this.setState({ largeImg: url });\n  };\n  myScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n  render() {\n    const { images, loading, error } = this.state;\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        {error && (\n          <h1 style={{ color: \"red\", textAlign: \"center\" }}>{error.message}</h1>\n        )}\n        {loading && (\n          <Loader\n            type=\"Circles\"\n            color=\"red\"\n            height={80}\n            width={80}\n            style={{ textAlign: \"center\" }}\n          />\n        )}\n        {!this.state.myImage && (\n          <h1 style={{ textAlign: \"center\" }}>\n            Enter a name for the image search\n          </h1>\n        )}\n        {images.length > 0 && (\n          <ImageGallery images={images} largeImg={this.setLargeImage} />\n        )}\n        {images.length > 0 && !loading && <Button onClick={this.fetchImages} />}\n        {this.state.largeImg && (\n          <Modal\n            onClose={() => {\n              this.setState({ largeImg: null });\n            }}\n          >\n            <img src={this.state.largeImg} alt=\"\" />\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}