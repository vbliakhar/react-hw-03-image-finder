{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/Button/Button.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Searchbar","state","myImage","handleNameChange","e","setState","currentTarget","value","toLowerCase","handlerSubmit","event","preventDefault","console","log","trim","props","onSubmit","className","this","type","name","placeholder","onChange","Component","Button","style","textAlign","onClick","ImageGalleryItem","src","image","webformatURL","alt","ImageGallery","images","map","id","myKey","App","loading","error","page","handleFormSubmit","fetchImages","fetch","then","res","ok","json","Promise","reject","Error","preState","hits","length","catch","finally","prevProps","prevState","color","message","height","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.127d6c93.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Searchbar extends Component {\n  state = {\n    myImage: \"\",\n  };\n  handleNameChange = (e) => {\n    this.setState({ myImage: e.currentTarget.value.toLowerCase() });\n  };\n  handlerSubmit = (event) => {\n    event.preventDefault();\n    console.log(this.state.myImage + \" handlerSubmit Searchbar\");\n    if (this.state.myImage.trim() === \"\") {\n      return;\n    }\n    this.props.onSubmit(this.state.myImage);\n    this.setState({ myImage: \"\" });\n  };\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form onSubmit={this.handlerSubmit} className=\"SearchForm\">\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            name=\"bar\"\n            // autocomplete=\"off\"\n            // autofocus\n            placeholder=\"Search images and photos\"\n            value={this.state.myImage}\n            onChange={this.handleNameChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import React from \"react\";\n\nconst Button = (props) => {\n  return (\n    <>\n      <button\n        type=\"button\"\n        className=\"Button\"\n        style={{ textAlign: \"center\" }}\n        onClick={props.onClick}\n      >\n        Load more\n      </button>\n    </>\n  );\n};\n\nexport default Button;\n\n// window.scrollTo({\n//   top: document.documentElement.scrollHeight,\n//   behavior: 'smooth',\n// });\n","import React from \"react\";\n\nconst ImageGalleryItem = (props) => {\n  return (\n    <>\n      <li className=\"ImageGalleryItem\">\n        <img\n          src={props.image.webformatURL}\n          alt=\"\"\n          className=\"ImageGalleryItem-image\"\n        />\n      </li>\n    </>\n  );\n};\n\nexport default ImageGalleryItem;\n","import React from \"react\";\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nfunction ImageGallery(props) {\n  return (\n    <ul className=\"ImageGallery\">\n      {props.images.map((image) => {\n        return <ImageGalleryItem image={image} key={image.id} />;\n      })}\n    </ul>\n  );\n}\n\nexport default ImageGallery;\n","import React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nimport Searchbar from \"./components/Searchbar\";\nimport Button from \"./components/Button\";\nimport \"./App.scss\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\n\nconst myKey = \"22042086-a7502aa63bbf9b5978b2310\";\nclass App extends Component {\n  state = {\n    myImage: \"\",\n    images: [],\n    loading: false,\n    error: null,\n    page: 1,\n  };\n  handleFormSubmit = (myImage) => {\n    this.setState({ myImage });\n    // console.log(myImage + \" handleFormSubmit App\");\n  };\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevState.myImage;\n    const nextName = this.state.myImage;\n    if (prevName !== nextName) {\n      this.setState({ loading: true, images: null });\n      this.fetchImages();\n    }\n  }\n  fetchImages = () => {\n    fetch(\n      `https://pixabay.com/api/?q=${this.state.myImage}&page=${this.state.page}&key=${myKey}de&image_type=photo&orientation=horizontal&per_page=6`\n    )\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(new Error(` No image  ${this.state.myImage}`));\n      })\n      .then((images) => {\n        // this.setState({\n        //   images: [...images.hits, ...this.state.images],\n        //   page: this.state.page + 1,\n        // });\n        this.setState((preState) => ({\n          images: [...images.hits],\n          page: preState.page + 1,\n        }));\n        if (!images.hits.length) {\n          return Promise.reject(new Error(` No image  ${this.state.myImage}`));\n        } else {\n          this.setState({ error: null });\n        }\n      })\n      .catch((error) => this.setState({ error }))\n      .finally(() => {\n        this.setState({ loading: false });\n      });\n  };\n  render() {\n    const { images, loading, error } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        {error && <h1 style={{ color: \"red\" }}>{error.message}</h1>}\n\n        {loading && (\n          <Loader\n            type=\"Circles\"\n            color=\"red\"\n            height={80}\n            width={80}\n            style={{ textAlign: \"center\" }}\n          />\n        )}\n        {!this.state.myImage && <h1>Enter a name for the image search</h1>}\n        {images && <ImageGallery images={images} />}\n        {images && <Button onClick={this.fetchImages} />}\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}